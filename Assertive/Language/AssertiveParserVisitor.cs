//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:/dev/private/Assertive/Assertive/Language/AssertiveParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="AssertiveParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IAssertiveParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] AssertiveParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.importStatements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStatements([NotNull] AssertiveParser.ImportStatementsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] AssertiveParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesesExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesesExpression([NotNull] AssertiveParser.ParenthesesExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>requestInvocationExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequestInvocationExpression([NotNull] AssertiveParser.RequestInvocationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DictionaryExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDictionaryExpression([NotNull] AssertiveParser.DictionaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryLogicalExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryLogicalExpression([NotNull] AssertiveParser.BinaryLogicalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryLogicalExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryLogicalExpression([NotNull] AssertiveParser.UnaryLogicalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BinaryArithmeticExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryArithmeticExpression([NotNull] AssertiveParser.BinaryArithmeticExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>VarExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarExpression([NotNull] AssertiveParser.VarExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>StringExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExpression([NotNull] AssertiveParser.StringExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ListExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitListExpression([NotNull] AssertiveParser.ListExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NumericExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumericExpression([NotNull] AssertiveParser.NumericExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FunctionInvocationExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionInvocationExpression([NotNull] AssertiveParser.FunctionInvocationExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>BoolExpression</c>
	/// labeled alternative in <see cref="AssertiveParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolExpression([NotNull] AssertiveParser.BoolExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.unaryOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryOperator([NotNull] AssertiveParser.UnaryOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.binaryLogicalOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryLogicalOperator([NotNull] AssertiveParser.BinaryLogicalOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.binaryArithmeticOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBinaryArithmeticOperator([NotNull] AssertiveParser.BinaryArithmeticOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentStatement([NotNull] AssertiveParser.AssignmentStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStatement([NotNull] AssertiveParser.ImportStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] AssertiveParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] AssertiveParser.BreakStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] AssertiveParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.assertStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssertStatement([NotNull] AssertiveParser.AssertStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.outputStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOutputStatement([NotNull] AssertiveParser.OutputStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] AssertiveParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.ifBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfBody([NotNull] AssertiveParser.IfBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatement([NotNull] AssertiveParser.LoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] AssertiveParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.eachStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEachStatement([NotNull] AssertiveParser.EachStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.httpMethod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHttpMethod([NotNull] AssertiveParser.HttpMethodContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.requestInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequestInvocation([NotNull] AssertiveParser.RequestInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.requestInvocationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRequestInvocationStatement([NotNull] AssertiveParser.RequestInvocationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.querySection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitQuerySection([NotNull] AssertiveParser.QuerySectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.headerSection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitHeaderSection([NotNull] AssertiveParser.HeaderSectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.dictionary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDictionary([NotNull] AssertiveParser.DictionaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.dictionaryEntry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDictionaryEntry([NotNull] AssertiveParser.DictionaryEntryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.bodySection"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBodySection([NotNull] AssertiveParser.BodySectionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.functionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionStatement([NotNull] AssertiveParser.FunctionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.functionParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParameterList([NotNull] AssertiveParser.FunctionParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.functionParam"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionParam([NotNull] AssertiveParser.FunctionParamContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.functionInvocation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionInvocation([NotNull] AssertiveParser.FunctionInvocationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.functionInvocationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionInvocationStatement([NotNull] AssertiveParser.FunctionInvocationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] AssertiveParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="AssertiveParser.stringContent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringContent([NotNull] AssertiveParser.StringContentContext context);
}
